export default class Lobby extends Phaser.Scene { constructor(){ super({ key:'Lobby' }); } create(){ this.socket = io(); this.add.text(40,30,'Kart Racer Pro — Lobby',{fontSize:'28px',fill:'#fff'}); this.matchListText = this.add.text(40,80,'Matches: (press L to list)',{fontSize:'16px',fill:'#ccc'}); this.input.keyboard.on('keydown-L', ()=> this.socket.emit('listMatches')); this.input.keyboard.on('keydown-C', ()=> this.socket.emit('createMatch', {})); this.socket.on('matches', (m)=>{ let y=120; this.add.rectangle(40,110,940,520,0x000000,0.4); for (const mm of m){ this.add.text(60,y, mm.id + ' — players: ' + mm.players, { fontSize:'18px', fill:'#fff' } ); y+=28; } }); this.socket.on('matchCreated',(id)=>{ this.socket.emit('joinMatch', id); }); this.socket.on('lobby',(players)=>{ this.add.rectangle(420,120,560,520,0x000000,0.6); let y=140; for (const id in players){ const p=players[id]; this.add.text(440,y, (p.ready? '[✔] ':'[ ] ') + (p.name||id.substring(0,6)) + (p.isBot? ' (bot)':''), { fontSize:'16px', fill:'#fff' }); y+=28; } }); this.input.keyboard.on('keydown-R', ()=>{ this.socket.emit('ready', { rid: this.currentMatch, ready:true }); }); } }
